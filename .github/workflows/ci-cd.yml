name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push frontend image
        run: |
          cd frontend
          TAG=$(date +%s)  # Use a timestamp as the tag
          docker build -t dhananjayakafle/app_segregation_frontend:$TAG .
          docker push dhananjayakafle/app_segregation_frontend:$TAG
          echo "FRONTEND_IMAGE_TAG=$TAG" >> $GITHUB_ENV  # Save the tag for the deploy job

      - name: Build and push backend image
        run: |
          cd backend
          TAG=$(date +%s)  # Use a timestamp as the tag
          docker build -t dhananjayakafle/app_segregation_backend:$TAG .
          docker push dhananjayakafle/app_segregation_backend:$TAG
          echo "BACKEND_IMAGE_TAG=$TAG" >> $GITHUB_ENV  # Save the tag for the deploy job

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubectl
        run: |
          az aks install-cli

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group TermProject --name termCluster --overwrite-existing

      - name: Deploy to AKS
        run: |
          # Update the deployment manifests with the new image tags
          sed -i "s|dhananjayakafle/app_segregation_frontend:.*|dhananjayakafle/app_segregation_frontend:$FRONTEND_IMAGE_TAG|" k3s/frontend-deployment.yaml
          sed -i "s|dhananjayakafle/app_segregation_backend:.*|dhananjayakafle/app_segregation_backend:$BACKEND_IMAGE_TAG|" k3s/backend-deployment.yaml

          # Apply the updated manifests
          kubectl apply -f k3s/backend-deployment.yaml
          kubectl apply -f k3s/backend-service.yaml
          kubectl apply -f k3s/frontend-deployment.yaml
          kubectl apply -f k3s/frontend-service.yaml
